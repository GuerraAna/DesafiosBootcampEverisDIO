import java.math.BigDecimal
import java.math.RoundingMode
import kotlin.math.pow
/*Explicação do Desafio número 5:
  . A= 2 * pi * raio -> pi =~ 3.14159;
  . Cálculo da área desejada = (raio)^2 * (pi) * 2. Lembre-se, existem diversas soluções para este cálculo, como a utilização do raio.pow(2);
  . Entrada é um ponto flutuante (Double = dupla precisão)
  . Obs: o raio é variável!! Lembre-se de usar o val por ser um valor único e imodificável na entrada. O que pode ocorrer é a entrada "aleatória do raio";
  - Objetivo: Resolver de forma simplificada.
  */
fun main() {
    //Declaração das Palavras Reservadas.
    val raio = readLine()!!.toDouble()
    val pi = 3.14159
    val area = pi * (raio*raio)
    //O resultado do cálculo área precisa ter 4 casas após o ponto decimal (a vírgula).
    val resultado = BigDecimal(area).setScale(4, RoundingMode.HALF_EVEN)
    //Saída do resultado da conta.
        println("A=$resultado")
    //Atenção aos exemplos!!! A questão colocou exemplos sem espaços entre A = n!!!!!!
}